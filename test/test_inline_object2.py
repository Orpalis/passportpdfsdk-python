# coding: utf-8

"""
    PassportPDF API

    Another brick in the cloud  # noqa: E501

    The version of the OpenAPI document: 1.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.inline_object2 import InlineObject2  # noqa: E501
from openapi_client.rest import ApiException

class TestInlineObject2(unittest.TestCase):
    """InlineObject2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineObject2
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.inline_object2.InlineObject2()  # noqa: E501
        if include_optional :
            return InlineObject2(
                file_data = bytes(b'blah'), 
                load_document_parameters = openapi_client.models.pdf_load_document_parameters.PdfLoadDocumentParameters(
                    file_name = '0', 
                    password = '0', 
                    conformance = 'Unknown', 
                    content_encoding = 'Identity', 
                    enable_color_detection = True, 
                    get_preview = True, 
                    thumbnail_width = 56, 
                    thumbnail_height = 56, 
                    thumbnail_background_color = 'rgba(0,0,0,0)', 
                    thumbnail_fit_to_page_size = True, 
                    txt_page_width = 1.337, 
                    txt_page_height = 1.337, 
                    txt_page_margin_left = 1.337, 
                    txt_page_margin_top = 1.337, 
                    txt_page_margin_right = 1.337, 
                    txt_page_margin_bottom = 1.337, 
                    txt_horizontal_text_alignment = 'Near', 
                    txt_font_size = 1.337, 
                    txt_font_family = 'Arial Unicode MS', 
                    txt_font_bold = True, 
                    txt_font_italic = True, )
            )
        else :
            return InlineObject2(
                file_data = bytes(b'blah'),
        )

    def testInlineObject2(self):
        """Test InlineObject2"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
