# coding: utf-8

"""
    PassportPDF API

    Another brick in the cloud  # noqa: E501

    The version of the OpenAPI document: 1.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.pdf_annotate_parameters import PdfAnnotateParameters  # noqa: E501
from openapi_client.rest import ApiException

class TestPdfAnnotateParameters(unittest.TestCase):
    """PdfAnnotateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PdfAnnotateParameters
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.pdf_annotate_parameters.PdfAnnotateParameters()  # noqa: E501
        if include_optional :
            return PdfAnnotateParameters(
                file_id = '0', 
                page_range = '0', 
                annotation_type = 'StickyNote', 
                sticky_note_annotation_parameters = openapi_client.models.sticky_note_annotation_parameters.StickyNoteAnnotationParameters(
                    annotation_layout = openapi_client.models.drawable_content_layout_parameters.DrawableContentLayoutParameters(
                        horizontal_position = 'Center', 
                        vertical_position = 'Center', 
                        size = 'Small', 
                        indent_from_edges = True, 
                        absolute_position_left = 1.337, 
                        absolute_position_top = 1.337, 
                        absolute_width = 1.337, 
                        absolute_height = 1.337, ), 
                    sticky_note_icon = 'Comment', 
                    author = '0', 
                    subject = '0', 
                    content = '0', 
                    open_popup = True, 
                    color = 'red', ), 
                link_annotation_parameters = openapi_client.models.link_annotation_parameters.LinkAnnotationParameters(
                    annotation_layout = openapi_client.models.drawable_content_layout_parameters.DrawableContentLayoutParameters(
                        horizontal_position = 'Center', 
                        vertical_position = 'Center', 
                        size = 'Small', 
                        indent_from_edges = True, 
                        absolute_position_left = 1.337, 
                        absolute_position_top = 1.337, 
                        absolute_width = 1.337, 
                        absolute_height = 1.337, ), 
                    link_type = 'Page', 
                    link_page = 56, 
                    link_uri = '0', 
                    show_border = True, 
                    color = 'red', ), 
                free_text_annotation_parameters = openapi_client.models.free_text_annotation_parameters.FreeTextAnnotationParameters(
                    annotation_layout = openapi_client.models.drawable_content_layout_parameters.DrawableContentLayoutParameters(
                        horizontal_position = 'Center', 
                        vertical_position = 'Center', 
                        size = 'Small', 
                        indent_from_edges = True, 
                        absolute_position_left = 1.337, 
                        absolute_position_top = 1.337, 
                        absolute_width = 1.337, 
                        absolute_height = 1.337, ), 
                    text_parameters = openapi_client.models.pdf_text_parameters.PdfTextParameters(
                        text = '0', 
                        text_color = 'black', 
                        font_name = '0', 
                        standard_font_name = 'Courier', 
                        font_style = 'Regular', 
                        font_size = 56, ), 
                    title = '0', 
                    subject = '0', 
                    show_border = True, 
                    color = 'red', ), 
                line_annotation_parameters = openapi_client.models.line_annotation_parameters.LineAnnotationParameters(
                    line_start_x = 1.337, 
                    line_start_y = 1.337, 
                    line_end_x = 1.337, 
                    line_end_y = 1.337, 
                    title = '0', 
                    content = '0', 
                    line_start_style = 'Square', 
                    line_end_style = 'Square', 
                    show_content = True, 
                    line_width = 'Small', 
                    absolute_annotation_line_width = 1.337, 
                    color = 'red', ), 
                square_and_circle_annotation_parameters = openapi_client.models.square_and_circle_annotation_parameters.SquareAndCircleAnnotationParameters(
                    annotation_layout = openapi_client.models.drawable_content_layout_parameters.DrawableContentLayoutParameters(
                        horizontal_position = 'Center', 
                        vertical_position = 'Center', 
                        size = 'Small', 
                        indent_from_edges = True, 
                        absolute_position_left = 1.337, 
                        absolute_position_top = 1.337, 
                        absolute_width = 1.337, 
                        absolute_height = 1.337, ), 
                    title = '0', 
                    content = '0', 
                    line_width = 'Small', 
                    absolute_annotation_line_width = 1.337, 
                    color = 'red', ), 
                rubber_stamp_annotation_parameters = openapi_client.models.rubber_stamp_annotation_parameters.RubberStampAnnotationParameters(
                    annotation_layout = openapi_client.models.drawable_content_layout_parameters.DrawableContentLayoutParameters(
                        horizontal_position = 'Center', 
                        vertical_position = 'Center', 
                        size = 'Small', 
                        indent_from_edges = True, 
                        absolute_position_left = 1.337, 
                        absolute_position_top = 1.337, 
                        absolute_width = 1.337, 
                        absolute_height = 1.337, ), 
                    rubber_stamp_icon = 'Approved', 
                    title = '0', 
                    content = '0', 
                    color = 'red', )
            )
        else :
            return PdfAnnotateParameters(
                file_id = '0',
                page_range = '0',
        )

    def testPdfAnnotateParameters(self):
        """Test PdfAnnotateParameters"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
