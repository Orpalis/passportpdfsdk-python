# coding: utf-8

"""
    PassportPDF API

    Another brick in the cloud  # noqa: E501

    The version of the OpenAPI document: 1.0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.passport_pdf_passport import PassportPDFPassport  # noqa: E501
from openapi_client.rest import ApiException

class TestPassportPDFPassport(unittest.TestCase):
    """PassportPDFPassport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PassportPDFPassport
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.passport_pdf_passport.PassportPDFPassport()  # noqa: E501
        if include_optional :
            return PassportPDFPassport(
                passport_id = '0', 
                plan_id = 56, 
                optional_linked_subscription_id = '0', 
                subscription_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                current_tokens_used = 56, 
                extra_tokens = 56, 
                extra_tokens_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                is_yearly_paid = True, 
                is_active = True, 
                tokens_percent_usage_alert = 56, 
                tokens_percent_usage_alert_sent = True, 
                is_managed = True, 
                next_monthly_term = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                remaining_tokens = 56
            )
        else :
            return PassportPDFPassport(
        )

    def testPassportPDFPassport(self):
        """Test PassportPDFPassport"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
