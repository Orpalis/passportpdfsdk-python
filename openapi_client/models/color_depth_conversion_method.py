# coding: utf-8

"""
    PassportPDF API

    Another brick in the cloud  # noqa: E501

    The version of the OpenAPI document: 1.0.1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ColorDepthConversionMethod(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DEPTH1BPP = "Depth1Bpp"
    DEPTH1BPPOTSU = "Depth1BppOtsu"
    DEPTH1BPPBRADLEY = "Depth1BppBradley"
    DEPTH1BPPSAUVOLA = "Depth1BppSauvola"
    DEPTH1BPPFAST = "Depth1BppFast"
    DEPTH4BPP16 = "Depth4Bpp16"
    DEPTH4BPPQ = "Depth4BppQ"
    DEPTH8BPPGRAYSCALE = "Depth8BppGrayScale"
    DEPTH8BPPGRAYSCALEADV = "Depth8BppGrayScaleAdv"
    DEPTH8BPP216 = "Depth8Bpp216"
    DEPTH8BPPQ = "Depth8BppQ"
    DEPTH16BPPRGB555 = "Depth16BppRGB555"
    DEPTH16BPPRGB565 = "Depth16BppRGB565"
    DEPTH24BPPRGB = "Depth24BppRGB"
    DEPTH32BPPARGB = "Depth32BppARGB"
    DEPTH32BPPRGB = "Depth32BppRGB"
    DEPTH32BPPPARGB = "Depth32BppPARGB"
    DEPTH48BPPRGB = "Depth48BppRGB"
    DEPTH64BPPARGB = "Depth64BppARGB"
    DEPTH64BPPPARGB = "Depth64BppPARGB"

    allowable_values = [DEPTH1BPP, DEPTH1BPPOTSU, DEPTH1BPPBRADLEY, DEPTH1BPPSAUVOLA, DEPTH1BPPFAST, DEPTH4BPP16, DEPTH4BPPQ, DEPTH8BPPGRAYSCALE, DEPTH8BPPGRAYSCALEADV, DEPTH8BPP216, DEPTH8BPPQ, DEPTH16BPPRGB555, DEPTH16BPPRGB565, DEPTH24BPPRGB, DEPTH32BPPARGB, DEPTH32BPPRGB, DEPTH32BPPPARGB, DEPTH48BPPRGB, DEPTH64BPPARGB, DEPTH64BPPPARGB]  # noqa: E501

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
    }

    attribute_map = {
    }

    def __init__(self, local_vars_configuration=None):  # noqa: E501
        """ColorDepthConversionMethod - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ColorDepthConversionMethod):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ColorDepthConversionMethod):
            return True

        return self.to_dict() != other.to_dict()
